name: CI/CD Pipeline

on:
  push:
    branches:
      - "master"
    tags:
      - "**"
    pull_request: {}

permissions:
  contents: read
  id-token: write

env:
  COLUMNS: 150

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  lint:
    runs-on: ubuntu-latest
    needs: fetch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.6.6"
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock

      - name: Switch uv index (CodeArtifact)
        shell: bash
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ vars.AWS_DOMAIN }} \
            --domain-owner ${{ vars.AWS_ACCOUNT_ID }} \
            --region ${{ vars.AWS_REGION }} \
            --query authorizationToken \
            --output text)
          echo "UV_DEFAULT_INDEX=https://aws:${CODEARTIFACT_AUTH_TOKEN}@sbayt-${{ vars.AWS_ACCOUNT_ID }}.d.codeartifact.${{ vars.AWS_REGION }}.amazonaws.com/pypi/python-sbayt-repository/simple/" >> $GITHUB_ENV

      - name: Sync dependencies
        run: uv sync --all-extras --dev

      - name: Verify Installed Packages
        run: uv pip check

      - name: Run pre-commit hooks
        run: |
          uv run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.23"
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml

      - name: Switch uv index (CodeArtifact)
        shell: bash
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ vars.AWS_DOMAIN }} \
            --domain-owner ${{ vars.AWS_ACCOUNT_ID }} \
            --region ${{ vars.AWS_REGION }} \
            --query authorizationToken \
            --output text)
          echo "UV_DEFAULT_INDEX=https://aws:${CODEARTIFACT_AUTH_TOKEN}@sbayt-${{ vars.AWS_ACCOUNT_ID }}.d.codeartifact.${{ vars.AWS_REGION }}.amazonaws.com/pypi/python-sbayt-repository/simple/" >> $GITHUB_ENV

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run Unit Tests
        run: |
          uv run pytest -m unit || echo "No unit tests executed"

      - name: Run Integration Tests
        run: |
          uv run pytest -m integration || echo "No integration tests executed"

  scan:
    runs-on: ubuntu-latest
    needs: test
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: scan
    runs-on: ubuntu-latest
    environment: release

    outputs:
      lib-version: ${{ steps.check-tag.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.23"
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml

      - name: Switch uv index (CodeArtifact)
        shell: bash
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ vars.AWS_DOMAIN }} \
            --domain-owner ${{ vars.AWS_ACCOUNT_ID }} \
            --region ${{ vars.AWS_REGION }} \
            --query authorizationToken \
            --output text)
          echo "UV_DEFAULT_INDEX=https://aws:${CODEARTIFACT_AUTH_TOKEN}@sbayt-${{ vars.AWS_ACCOUNT_ID }}.d.codeartifact.${{ vars.AWS_REGION }}.amazonaws.com/pypi/python-sbayt-repository/simple/" >> $GITHUB_ENV

      - name: Check version
        id: check-tag
        uses: samuelcolvin/check-python-version@v4.1
        with:
          version_file_path: "pyproject.toml"

      - name: Build and publish to PyPI
        run: |
          uv build --no-sources
          uv publish
